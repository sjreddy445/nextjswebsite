{"pageProps":{"blogPost":{"id":439,"title":"Part 1 | How to better understand job descriptions and profiles through Deep Learning","content":"<p>Hi folks!</p>\n<p>We are back with another interesting tech-blog series and this time we discuss a topic that’s been the flavour of the season: How to apply Deep Learning to make Hiring Better?</p>\n<p>So let’s get started!</p>\n<p><strong>Decoding job descriptions and resumes</strong></p>\n<p>In many organizations, including ours, we aim to intelligently match candidates to a job description (JD). This activity demands to understand a JD and a resume at a higher, deeper level. This requires a lot of messy wanderings through unstructured text, extracting important skills and traits from each section, and coming up with a similarity score between a resume and JD. It could sometimes become very difficult as it is hard to teach a machine how to extract important information from unstructured text.</p>\n<p>Ready for a fun fact?</p>\n<p>Of all the animals that evolved in our planet, somehow, we are the only species able to create a syntactic and semantic complex-rule based language for our communication!</p>\n<p>The rich set of vocabulary, contextual information and syntax makes it tough for a machine to parse important information. Yet, we are getting very good at understanding JDs and resumes using a set of new tools in our arsenal, which includes Deep Learning.</p>\n<p><strong>Why Deep Learning?</strong></p>\n<p>Deep Learning, based on modern neural networks has been able to surpass human level inaccuracies in various domains. It is fascinating to us because it can efficiently encode a lot of contextual information, which helps us to understand the important features automatically. Previous machine learning models required us to do a lot of manual feature engineering but with Deep Learning that has changed.</p>\n<p>Deep Learning can automatically infer most of the features, and even beat those shallow learning approaches in many cases if tuned properly with enough data. For example: a trained sequential model could differentiate between &#8216;working with project manager&#8217; and &#8216;working as project manager&#8217;. A one-hot encoded vector could be easily fooled in thinking that both of the sentences are almost similar, but a Deep Learning based recurrent neural network can use the contextual information in making a decision.</p>\n<p><strong>Predicting the relevant title</strong></p>\n<p>Natural language has a lot of variations like the one we have mentioned in the earlier example. Although a naive algorithm would be able to extract important skills from a job description and a resume, it could make a lot of silly mistakes. What if we can reduce a job description and a resume to a birds-eye-view and look at it in a different perspective altogether?</p>\n<p>We also work directly with client specific problems, one of such important problems is to hire good external candidates from job portals like Naukri, Monster and Shine. Sometimes, it becomes tough to identify the candidate title as they can be very specific to a client. For example, client could internally call a role as &#8216;Desktop Engineer Band 2&#8217;, but the actual role is for a &#8216;Desktop Support Engineer&#8217;. When searching for candidates externally, it would be better to use titles like desktop engineer or desktop support engineer. Using alternative titles in querying for candidates would improve the relevancy of the search results. Here is one such job description. If we can predict these alternative titles, it could be used as a way to normalize titles.</p>\n<p><img loading=\"lazy\" class=\"alignnone wp-image-6104\" src=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/1.png?resize=686%2C359&#038;ssl=1\" alt=\"\" width=\"686\" height=\"359\" srcset=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/1.png?w=300&amp;ssl=1 300w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/1.png?w=768&amp;ssl=1 768w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/1.png?w=1024&amp;ssl=1 1024w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/1.png?w=1145&amp;ssl=1 1145w\" sizes=\"(max-width: 686px) 100vw, 686px\" data-recalc-dims=\"1\" /></p>\n<p><img loading=\"lazy\" class=\"alignnone wp-image-6106\" src=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/2.png?resize=694%2C416&#038;ssl=1\" alt=\"\" width=\"694\" height=\"416\" srcset=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/2.png?w=300&amp;ssl=1 300w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/2.png?w=768&amp;ssl=1 768w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/2.png?w=911&amp;ssl=1 911w\" sizes=\"(max-width: 694px) 100vw, 694px\" data-recalc-dims=\"1\" /><br />\n<strong>The model</strong></p>\n<p>There has been criticism about Deep Learning and it&#8217;s black box nature. It looks like magic, but at its core it really boils down to using dense vector representations and a lot of super-cool mathematics.</p>\n<p>Why do you need a Deep Learning model when you can train multiple linear classifiers and interpret what features are effecting your result directly?</p>\n<p>We can give several reasons as to why shallow learning methods are inefficient. But as a good debater once told me, when you don&#8217;t have one solid good reason, you need to have several reasons!</p>\n<p>First, linear or logistic regression considers each class independently and trains multiple classifiers. This is not true in the real world. Each class might interact and be correlated with the other. A Deep Learning model uses shared parameters among all the classes, this generalizes better to unseen data than individual classifiers. Also, there has been research suggesting that deep learning can be very <a href=\"https://arxiv.org/abs/1705.10694\">resistant to noise in labels</a>. And, Deep Learning models can scale well with data. As deep learning uses matrix multiplications, it can be efficiently implemented on a GPU. Moreover, they are not black boxes. You can interpret them as you would interpret a linear regression model, but it&#8217;s just a little more difficult. Again, the current research in <a href=\"https://www.cs.cmu.edu/~diyiy/docs/naacl16.pdf\">attention models</a> and <a href=\"https://arxiv.org/abs/1612.07182\">combination of reinforcement and supervised learning</a> are guiding us towards a more interpretable deep learning models.</p>\n<p>To achieve the task of extracting relevant titles, we have trained a deep recurrent neural network on almost 5 million parsed resumes, JDs and title pairs. The dataset contains the data from various domains. In the data preparation stage, classes with very low number of occurrences were removed. The samples were tokenized into sentences and then sentences were tokenized into words. Each word is assigned an index with a random embedding that is learned during the training phase. The pre-processing was kept to a minimum except for word lowercasing. We have not identified any phrases beforehand. The model hyperparameters: word embedding size of 300, a word level Gated Recurrent Unit (GRU) with hidden state of size 200, a sentence level GRU with hidden state of size 200 and around 2600 classes.</p>\n<p>It uses a uses a hierarchical structure that encodes the given unstructured text into a vector using a recurrent neural network inspired by this <a href=\"https://www.cs.cmu.edu/~diyiy/docs/naacl16.pdf\">research work</a>. Each sentence is passed through a network called Gated Recurrent Unit (GRU) which tries to capture the important information in the sentence. These sentences (with their vectors) are clubbed together to form a sentence vector by using another GRU. By using this structure, we can reduce all the complexity in the unstructured text to a single vector which could be used to make a prediction about the title it belongs to.</p>\n<p>All the weights are initialized randomly, and the whole network is optimized with negative log likelihood objective function with a softmax at the end to normalize the probabilities. The model was trained with SGD optimizer, the learning rate was chosen by closely monitoring validation loss on a small dataset. Gradient clipping was also used. The validation loss was monitored at the end of each epoch, and early stopping was used as a regularization technique to avoid overfitting. At the end of seventh epoch, the validation loss started increasing, so training was halted. The model reached around 24.5 top-1 accuracy before it stopped improving.</p>\n<p><strong>Here is the training loss of the model plotted against minibatch number.</strong><br />\n<img loading=\"lazy\" class=\"alignnone wp-image-6109\" src=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/3.png?resize=693%2C469&#038;ssl=1\" alt=\"\" width=\"693\" height=\"469\" srcset=\"https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/3.png?w=300&amp;ssl=1 300w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/3.png?w=768&amp;ssl=1 768w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/3.png?w=1024&amp;ssl=1 1024w, https://i1.wp.com/edgenetworks.in/wp-content/uploads/2017/06/3.png?w=1030&amp;ssl=1 1030w\" sizes=\"(max-width: 693px) 100vw, 693px\" data-recalc-dims=\"1\" /></p>\n<p><em>This was the first of the 2 part blog series on how Deep Learning can effectively help us decode JDs. We hope you ejoyed reading it and also found the information helpful.  In the next part, we will discuss the results this Deep Learning model shows when applied and how we can use it to better ‘Search and Match.’</em></p>\n<p>&nbsp;</p>\n<p><em><img loading=\"lazy\" class=\"size-medium wp-image-6111 alignleft\" src=\"https://i2.wp.com/edgenetworks.in/wp-content/uploads/2017/06/4.jpg?resize=247%2C300&#038;ssl=1\" alt=\"\" width=\"247\" height=\"300\" srcset=\"https://i2.wp.com/edgenetworks.in/wp-content/uploads/2017/06/4.jpg?w=247&amp;ssl=1 247w, https://i2.wp.com/edgenetworks.in/wp-content/uploads/2017/06/4.jpg?w=768&amp;ssl=1 768w, https://i2.wp.com/edgenetworks.in/wp-content/uploads/2017/06/4.jpg?w=823&amp;ssl=1 823w\" sizes=\"(max-width: 247px) 100vw, 247px\" data-recalc-dims=\"1\" /></em><strong>Sandeep Tammu</strong> is a Data Scientist with EdGE Networks. With a desire to probe and experiment the real world, Sandeep pursued his education in electronics and physics. Working as a Data Scientist, he strives to bring the same level of enthusiasm into exploring and gaining valuable insights from various kinds of data using machine learning and predictive modelling techniques.</p>\n<p>.</p>\n<p>&nbsp;</p>\n","slug":"part-1-better-understand-job-descriptions-profiles-deep-learning","subTitle":"<p>Hi folks! We are back with another interesting tech-blog series and this time we discuss a topic that’s been the flavour of the season: How to apply Deep Learning to make Hiring Better? So let’s get started! Decoding job descriptions and resumes In many organizations,&#8230;</p>\n","sizeInGrid":4,"meta_description":null,"metaDesc":null,"published_at":"2021-02-23T18:15:33.636Z","created_at":"2021-02-23T18:15:26.663Z","updated_at":"2021-02-23T18:15:33.667Z","featuredImage":{"id":435,"name":"1-1.png","alternativeText":null,"caption":null,"width":800,"height":407,"formats":{"thumbnail":{"name":"thumbnail_1-1.png","hash":"thumbnail_1_1_e149e793ff","ext":".png","mime":"image/png","width":245,"height":125,"size":44.01,"path":null,"url":"/uploads/thumbnail_1_1_e149e793ff.png"},"medium":{"name":"medium_1-1.png","hash":"medium_1_1_e149e793ff","ext":".png","mime":"image/png","width":750,"height":382,"size":354.23,"path":null,"url":"/uploads/medium_1_1_e149e793ff.png"},"small":{"name":"small_1-1.png","hash":"small_1_1_e149e793ff","ext":".png","mime":"image/png","width":500,"height":254,"size":167.58,"path":null,"url":"/uploads/small_1_1_e149e793ff.png"}},"hash":"1_1_e149e793ff","ext":".png","mime":"image/png","size":273.89,"url":"/uploads/1_1_e149e793ff.png","previewUrl":null,"provider":"local","provider_metadata":null,"created_at":"2021-02-23T18:15:32.257Z","updated_at":"2021-02-23T18:15:32.277Z"},"categories":[{"id":1,"Name":"Industry News","published_at":"2021-02-22T04:47:23.560Z","created_at":"2021-02-22T04:47:13.950Z","updated_at":"2021-02-22T04:47:23.593Z"}]},"setting":{"id":1,"onScroll":false,"timeBound":true,"seconds":"15","userLeaving":false,"published_at":"2021-09-06T05:20:57.164Z","created_at":"2021-09-06T05:18:56.571Z","updated_at":"2021-10-25T05:51:58.729Z"}},"__N_SSG":true}